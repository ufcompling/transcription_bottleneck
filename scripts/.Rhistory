scale_x_continuous(breaks = seq(30, 350, by = 20)) +
scale_linetype_manual(values = c("51","solid"))
subset(asr_results, Metric == 'wer') %>%
ggplot(aes(Total, Value, group = Size, color = Size, linetype=Size)) +
geom_point(aes(color = Size), alpha=.01) +
#  geom_line(aes(linetype=Size)) +
scale_color_manual(values = c("darkblue", "peru")) +
#  scale_color_manual(values = wes_palette('Darjeeling2', n = 6)) +
#  scale_x_continuous(breaks=seq(0.5,5,1)) +
labs(x = "Training data duration (in minutes)") +
labs(y = 'WER') +
geom_smooth(mapping = aes(Total, Value), alpha=0.15) +#, method = 'gam', linetype=Size) +
#  facet_wrap(~ Metric, ncol = 8) +
theme_classic() +
theme(legend.asrition="top")  +
theme(text = element_text(size=20, family="Times")) +
ylim(0, 1) +
scale_x_continuous(breaks = seq(30, 350, by = 20))
subset(asr_results, Metric == 'wer') %>%
ggplot(aes(Total, Value, group = Size, color = Size, linetype=Size)) +
geom_point(aes(color = Size), alpha=.01) +
#  geom_line(aes(linetype=Size)) +
scale_color_manual(values = c("darkblue", "peru")) +
#  scale_color_manual(values = wes_palette('Darjeeling2', n = 6)) +
#  scale_x_continuous(breaks=seq(0.5,5,1)) +
labs(x = "Training data duration (in minutes)") +
labs(y = 'WER') +
geom_smooth(mapping = aes(Total, Value), alpha=0.5) +#, method = 'gam', linetype=Size) +
#  facet_wrap(~ Metric, ncol = 8) +
theme_classic() +
theme(legend.asrition="top")  +
theme(text = element_text(size=20, family="Times")) +
ylim(0, 1) +
scale_x_continuous(breaks = seq(30, 350, by = 20))
subset(asr_results, Metric == 'wer') %>%
ggplot(aes(Total, Value, group = Size, color = Size, linetype=Size)) +
geom_point(aes(color = Size), alpha=.01) +
#  geom_line(aes(linetype=Size)) +
scale_color_manual(values = c("darkblue", "peru")) +
#  scale_color_manual(values = wes_palette('Darjeeling2', n = 6)) +
#  scale_x_continuous(breaks=seq(0.5,5,1)) +
labs(x = "Training data duration (in minutes)") +
labs(y = 'WER') +
geom_smooth(mapping = aes(Total, Value), alpha=0.45) +#, method = 'gam', linetype=Size) +
#  facet_wrap(~ Metric, ncol = 8) +
theme_classic() +
theme(legend.asrition="top")  +
theme(text = element_text(size=20, family="Times")) +
ylim(0, 1) +
scale_x_continuous(breaks = seq(30, 350, by = 20))
subset(asr_results, Metric == 'wer') %>%
ggplot(aes(Total, Value, group = Size, color = Size, linetype=Size)) +
geom_point(aes(color = Size), alpha=.01) +
geom_line() +
scale_color_manual(values = c("darkblue", "peru")) +
#  scale_color_manual(values = wes_palette('Darjeeling2', n = 6)) +
#  scale_x_continuous(breaks=seq(0.5,5,1)) +
labs(x = "Training data duration (in minutes)") +
labs(y = 'WER') +
# geom_smooth(mapping = aes(Total, Value), alpha=0.45) +#, method = 'gam', linetype=Size) +
#  facet_wrap(~ Metric, ncol = 8) +
theme_classic() +
theme(legend.asrition="top")  +
theme(text = element_text(size=20, family="Times")) +
ylim(0, 1) +
scale_x_continuous(breaks = seq(30, 350, by = 20))
subset(asr_results, Metric == 'wer') %>%
ggplot(aes(Total, Value, group = Size, color = Size, linetype=Size)) +
geom_point(aes(color = Size), alpha=.1) +
geom_line() +
scale_color_manual(values = c("darkblue", "peru")) +
#  scale_color_manual(values = wes_palette('Darjeeling2', n = 6)) +
#  scale_x_continuous(breaks=seq(0.5,5,1)) +
labs(x = "Training data duration (in minutes)") +
labs(y = 'WER') +
# geom_smooth(mapping = aes(Total, Value), alpha=0.45) +#, method = 'gam', linetype=Size) +
#  facet_wrap(~ Metric, ncol = 8) +
theme_classic() +
theme(legend.asrition="top")  +
theme(text = element_text(size=20, family="Times")) +
ylim(0, 1) +
scale_x_continuous(breaks = seq(30, 350, by = 20))
subset(asr_results, Metric == 'wer') %>%
ggplot(aes(Total, Value, group = Size, color = Size, linetype=Size)) +
geom_point(aes(color = Size), alpha=.01) +
geom_line(alpha=.4) +
scale_color_manual(values = c("darkblue", "peru")) +
#  scale_color_manual(values = wes_palette('Darjeeling2', n = 6)) +
#  scale_x_continuous(breaks=seq(0.5,5,1)) +
labs(x = "Training data duration (in minutes)") +
labs(y = 'WER') +
# geom_smooth(mapping = aes(Total, Value), alpha=0.45) +#, method = 'gam', linetype=Size) +
#  facet_wrap(~ Metric, ncol = 8) +
theme_classic() +
theme(legend.asrition="top")  +
theme(text = element_text(size=20, family="Times")) +
ylim(0, 1) +
scale_x_continuous(breaks = seq(30, 350, by = 20))
subset(asr_results, Metric == 'wer') %>%
ggplot(aes(Total, Value, group = Size, color = Size, linetype=Size)) +
geom_point(aes(color = Size), alpha=.01) +
geom_line(alpha=1.4) +
scale_color_manual(values = c("darkblue", "peru")) +
#  scale_color_manual(values = wes_palette('Darjeeling2', n = 6)) +
#  scale_x_continuous(breaks=seq(0.5,5,1)) +
labs(x = "Training data duration (in minutes)") +
labs(y = 'WER') +
# geom_smooth(mapping = aes(Total, Value), alpha=0.45) +#, method = 'gam', linetype=Size) +
#  facet_wrap(~ Metric, ncol = 8) +
theme_classic() +
theme(legend.asrition="top")  +
theme(text = element_text(size=20, family="Times")) +
ylim(0, 1) +
scale_x_continuous(breaks = seq(30, 350, by = 20))
subset(asr_results, Metric == 'wer') %>%
ggplot(aes(Total, Value, group = Size, color = Size, linetype=Size)) +
geom_point(aes(color = Size), alpha=.01) +
geom_line(alpha=2.4) +
scale_color_manual(values = c("darkblue", "peru")) +
#  scale_color_manual(values = wes_palette('Darjeeling2', n = 6)) +
#  scale_x_continuous(breaks=seq(0.5,5,1)) +
labs(x = "Training data duration (in minutes)") +
labs(y = 'WER') +
# geom_smooth(mapping = aes(Total, Value), alpha=0.45) +#, method = 'gam', linetype=Size) +
#  facet_wrap(~ Metric, ncol = 8) +
theme_classic() +
theme(legend.asrition="top")  +
theme(text = element_text(size=20, family="Times")) +
ylim(0, 1) +
scale_x_continuous(breaks = seq(30, 350, by = 20))
asr_random <- read.csv('../results/asr_ave_random_results.txt', header = T, sep = ',', row.names = NULL)
asr_random <- read.csv('../results/asr_ave_results_random.txt', header = T, sep = ',', row.names = NULL)
head(asr_random)
asr_random <- read.csv('../results/asr_ave_results_random.txt', header = T, sep = '\t', row.names = NULL)
head(asr_random)
asr_random <- read.csv('../results/asr_ave_results_random.txt', header = T, sep = ' ', row.names = NULL)
head(asr_random)
head(asr_random,8)
asr_random <- read.csv('../results/asr_ave_results_random.txt', header = T, sep = ' ', row.names = NULL)
head(asr_random,8)
asr_al_30$Method <- rep('AL 30', nrow(asr_al_30))
asr_al_30 <- read.csv('../results/asr_ave_al_30.csv', header = T, sep = ',', row.names = NULL)
asr_al_30 <- read.csv('../results/asr_ave_results_30.csv', header = T, sep = ',', row.names = NULL)
asr_al_30$Total <- asr_al_30$Size + asr_al_30$Select_size
asr_al_30$Method <- rep('AL 30', nrow(asr_al_30))
head(asr_al_30)
head(asr_random)
asr_al_select <- select(asr_al, c('Language', 'Task', 'Size', 'Actual_duration', 'Model', 'Metric', 'Value', 'Method'))
asr_al <- rbind(asr_al_30, asr_al_60)
asr_al_60 <- read.csv('../results/asr_ave_results_60.csv', header = T, sep = ',', row.names = NULL)
asr_al_60$Total <- asr_al_60$Size + asr_al_60$Select_size
asr_al_60$Method <- rep('AL 60', nrow(asr_al_60))
head(asr_al_60)
asr_al <- rbind(asr_al_30, asr_al_60)
asr_al$Select_size <- as.numeric(asr_al$Select_size)
asr_al$Size <- as.factor(asr_al$Size)
asr_al_select <- select(asr_al, c('Language', 'Task', 'Size', 'Actual_duration', 'Model', 'Metric', 'Value', 'Method'))
asl_results <- rbind(asr_al_select, asr_random)
head(asr_al)
head(asr_al_select)
head(asr_random)
asl_results <- rbind(asr_al_select, asr_random)
asl_results <- rbind(as.dataframe(asr_al_select), asr_random)
data.frame(asr_al_select)
asl_results <- rbind(data.frame(asr_al_select), asr_random)
asl_results <- rbind(data.frame(asr_al_select), asr_random, stringsAsFactors = FALSE)
asl_results <- rbind(data.frame(asr_al_select, stringsAsFactors = FALSE), asr_random)
typeof(asr_random)
asr_random <- read.csv('../results/asr_ave_results_random.txt', header = T, sep = ' ', row.names = NULL, stringsAsFactors = FALSE)
asl_results <- rbind(data.frame(asr_al_select, ), asr_random)
asl_results <- rbind(data.frame(asr_al_select), asr_random)
typeof(asr_random)
asr_random <- data.frame(read.csv('../results/asr_ave_results_random.txt', header = T, sep = ' ', row.names = NULL))
asl_results <- rbind(data.frame(asr_al_select), asr_random)
typeof(asr_random)
typeof(asr_al_select)
asr_random
asr_al_select
tail(asr_al_select)
typeof(asr_al_30)
asr_al_select <- select(asr_al, c('Language', 'Task', 'Size', 'Actual_duration', 'Model', 'Metric', 'Value', 'Method'))
asl_results <- rbind(data.frame(asr_al_select), asr_random)
asr_results
asr_al_select <- select(asr_al, c('Language', 'Task', 'Size', 'Actual_duration', 'Model', 'Metric', 'Value', 'Method'))
head(asr_al_select)
asl_results <- rbind(data.frame(asr_al_select), asr_random)
asl_results
asr_random
asr_al <- rbind(asr_al_30, asr_al_60)
asr_al$Select_size <- as.numeric(asr_al$Select_size)
#asr_al$Size <- as.factor(asr_al$Size)
asr_al_select <- select(asr_al, c('Language', 'Task', 'Size', 'Actual_duration', 'Model', 'Metric', 'Value', 'Method'))
asl_results <- rbind(data.frame(asr_al_select), asr_random)
asr_random <- read.csv('../results/asr_ave_results_random.txt', header = T, sep = ' ', row.names = NULL)
asr_al <- rbind(asr_al_30, asr_al_60)
asr_al$Select_size <- as.numeric(asr_al$Select_size)
#asr_al$Size <- as.factor(asr_al$Size)
asr_al_select <- select(asr_al, c('Language', 'Task', 'Size', 'Actual_duration', 'Model', 'Metric', 'Value', 'Method'))
asl_results <- rbind(asr_al_select, asr_random)
subset(asr_results, Metric == 'wer') %>%
ggplot(aes(Total, Value, group = Method, color = Method, linetype=Method)) +
geom_point(aes(color = Size), alpha=.01) +
geom_line() +
#  scale_color_manual(values = c("darkblue", "peru")) +
#  scale_color_manual(values = wes_palette('Darjeeling2', n = 6)) +
#  scale_x_continuous(breaks=seq(0.5,5,1)) +
labs(x = "Training data duration (in minutes)") +
labs(y = 'WER') +
# geom_smooth(mapping = aes(Total, Value), alpha=0.45) +#, method = 'gam', linetype=Size) +
#  facet_wrap(~ Metric, ncol = 8) +
theme_classic() +
theme(legend.asrition="top")  +
theme(text = element_text(size=20, family="Times")) +
ylim(0, 1) +
scale_x_continuous(breaks = seq(30, 350, by = 20))
subset(asr_results, Metric == 'wer') %>%
ggplot(aes(Total, Value, group = Method, color = Method, linetype=Method)) +
geom_point(aes(color = Method), alpha=.01) +
geom_line() +
#  scale_color_manual(values = c("darkblue", "peru")) +
#  scale_color_manual(values = wes_palette('Darjeeling2', n = 6)) +
#  scale_x_continuous(breaks=seq(0.5,5,1)) +
labs(x = "Training data duration (in minutes)") +
labs(y = 'WER') +
# geom_smooth(mapping = aes(Total, Value), alpha=0.45) +#, method = 'gam', linetype=Size) +
#  facet_wrap(~ Metric, ncol = 8) +
theme_classic() +
theme(legend.asrition="top")  +
theme(text = element_text(size=20, family="Times")) +
ylim(0, 1) +
scale_x_continuous(breaks = seq(30, 350, by = 20))
head(asr_al_select)
asr_results <- rbind(asr_al_select, asr_random)
subset(asr_results, Metric == 'wer') %>%
ggplot(aes(Total, Value, group = Method, color = Method, linetype=Method)) +
geom_point(aes(color = Method), alpha=.01) +
geom_line() +
#  scale_color_manual(values = c("darkblue", "peru")) +
#  scale_color_manual(values = wes_palette('Darjeeling2', n = 6)) +
#  scale_x_continuous(breaks=seq(0.5,5,1)) +
labs(x = "Training data duration (in minutes)") +
labs(y = 'WER') +
# geom_smooth(mapping = aes(Total, Value), alpha=0.45) +#, method = 'gam', linetype=Size) +
#  facet_wrap(~ Metric, ncol = 8) +
theme_classic() +
theme(legend.asrition="top")  +
theme(text = element_text(size=20, family="Times")) +
ylim(0, 1) +
scale_x_continuous(breaks = seq(30, 350, by = 20))
head(asr_al)
asr_random <- read.csv('../results/asr_ave_results_random.txt', header = T, sep = ' ', row.names = NULL)
asr_random$Total <- asr_random$Size
asr_al <- rbind(asr_al_30, asr_al_60)
asr_al$Select_size <- as.numeric(asr_al$Select_size)
#asr_al$Size <- as.factor(asr_al$Size)
asr_al_select <- select(asr_al, c('Language', 'Task', 'Size', 'Actual_duration', 'Model', 'Metric', 'Value', 'Method', 'Total'))
asr_results <- rbind(asr_al_select, asr_random)
subset(asr_results, Metric == 'wer') %>%
ggplot(aes(Total, Value, group = Method, color = Method, linetype=Method)) +
geom_point(aes(color = Method), alpha=.01) +
geom_line() +
#  scale_color_manual(values = c("darkblue", "peru")) +
#  scale_color_manual(values = wes_palette('Darjeeling2', n = 6)) +
#  scale_x_continuous(breaks=seq(0.5,5,1)) +
labs(x = "Training data duration (in minutes)") +
labs(y = 'WER') +
# geom_smooth(mapping = aes(Total, Value), alpha=0.45) +#, method = 'gam', linetype=Size) +
#  facet_wrap(~ Metric, ncol = 8) +
theme_classic() +
theme(legend.asrition="top")  +
theme(text = element_text(size=20, family="Times")) +
ylim(0, 1) +
scale_x_continuous(breaks = seq(30, 350, by = 20))
tail(asr_random)
wer_30_nonlinear <- brm(
bf(Value  ~ 1 - (upperAsymptote - (upperAsymptote - min(wer_al_30$Value)) * exp(-Total * growthRate)),
upperAsymptote ~ 1,
growthRate ~ 1,
nl = TRUE),
data = wer_al_30,
prior = c(
prior(uniform(0, 1), nlpar = "upperAsymptote", lb = 0, ub = 1),
prior(uniform(0, 10), nlpar = "growthRate", lb = 0, ub = 10)
),
file = "wer_30_nonlinear",
iter = 6000,
warmup = 1000,
chains = 4,
cores = 4,
thin = 4,
control=list(adapt_delta=0.99))
wer_al_30 <- subset(asr_al, Size == '30' & Metric == 'wer')
start_wer_30 <- subset(wer_al_30, Total == min(wer_al_30$Total))$Value
end_wer_30 <- subset(wer_al_30, Total == max(wer_al_30$Total))$Value
start_wer_30
end_wer_30
wer_al_60 <- subset(asr_al, Size == '60' & Metric == 'wer')
start_wer_60 <- subset(wer_al_60, Total == min(wer_al_60$Total))$Value
end_wer_60 <- subset(wer_al_60, Total == max(wer_al_60$Total))$Value
start_wer_60
end_wer_60
wer_30_nonlinear <- brm(
bf(Value  ~ 1 - (upperAsymptote - (upperAsymptote - min(wer_al_30$Value)) * exp(-Total * growthRate)),
upperAsymptote ~ 1,
growthRate ~ 1,
nl = TRUE),
data = wer_al_30,
prior = c(
prior(uniform(0, 1), nlpar = "upperAsymptote", lb = 0, ub = 1),
prior(uniform(0, 10), nlpar = "growthRate", lb = 0, ub = 10)
),
file = "wer_30_nonlinear",
iter = 6000,
warmup = 1000,
chains = 4,
cores = 4,
thin = 4,
control=list(adapt_delta=0.99))
wer_al_30
wer_30_nonlinear <- brm(
bf(Value  ~ 1 - (upperAsymptote - (upperAsymptote - min(wer_al_30$Value)) * exp(-Total * growthRate)),
upperAsymptote ~ 1,
growthRate ~ 1,
nl = TRUE),
data = wer_al_30,
prior = c(
prior(uniform(0, 1), nlpar = "upperAsymptote", lb = 0, ub = 1),
prior(uniform(0, 10), nlpar = "growthRate", lb = 0, ub = 10)
),
file = "wer_30_nonlinear",
iter = 6000,
warmup = 1000,
chains = 4,
cores = 4,
thin = 4,
control=list(adapt_delta=0.99))
min(wer_al_30$Value)
wer_30_nonlinear <- brm(
bf(Value  ~ 1 - (upperAsymptote - (upperAsymptote - 0.2943729) * exp(-Total * growthRate)),
upperAsymptote ~ 1,
growthRate ~ 1,
nl = TRUE),
data = wer_al_30,
prior = c(
prior(uniform(0, 1), nlpar = "upperAsymptote", lb = 0, ub = 1),
prior(uniform(0, 10), nlpar = "growthRate", lb = 0, ub = 10)
),
file = "wer_30_nonlinear",
iter = 6000,
warmup = 1000,
chains = 4,
cores = 4,
thin = 4,
control=list(adapt_delta=0.99))
wer_30_nonlinear_predictions <- as.data.frame(ggpredict(wer_30_nonlinear))
wer_30_nonlinear_predictions$Metric <- "wer"
wer_30_nonlinear_predictions$Size <- "30"
wer_30_nonlinear_predictions
wer_30_nonlinear <- brm(
bf(Value  ~ 1 - (upperAsymptote - (upperAsymptote - 0) * exp(-Total * growthRate)),
upperAsymptote ~ 1,
growthRate ~ 1,
nl = TRUE),
data = wer_al_30,
prior = c(
prior(uniform(0, 1), nlpar = "upperAsymptote", lb = 0, ub = 1),
prior(uniform(0, 10), nlpar = "growthRate", lb = 0, ub = 10)
),
file = "wer_30_nonlinear",
iter = 6000,
warmup = 1000,
chains = 4,
cores = 4,
thin = 4,
control=list(adapt_delta=0.99))
wer_30_nonlinear_predictions <- as.data.frame(ggpredict(wer_30_nonlinear))
wer_30_nonlinear_predictions$Metric <- "wer"
wer_30_nonlinear_predictions$Size <- "30"
saveRDS(wer_30_nonlinear_predictions, "wer_30_nonlinear_predictions")
subset(asr_al, Metric == 'wer') %>%
ggplot(aes(Total, Value, group = Size, color = Size)) +
geom_point(aes(color = Size), alpha=1) +
#  geom_line(aes(linetype=Size)) +
scale_color_manual(values = c("darkblue", "peru")) +
# scale_color_brewer(palette = "Accent") +
#  scale_color_manual(values = wes_palette('Darjeeling2', n = 6)) +
#  scale_x_continuous(breaks=seq(0.5,5,1)) +
labs(x = "Training data duration (in minutes)") +
labs(y = 'WER') +
# geom_smooth(mapping = aes(Total, Std), method = 'gam') +
facet_wrap(~ Size, ncol = 1) +
theme_classic() +
theme(legend.asrition="top")  +
theme(text = element_text(size=20, family="Times")) +
ylim(0, 1) +
scale_x_continuous(breaks = seq(30, 350, by = 20))
asr_al$Size <- as.factor(asr_al$Size)
subset(asr_al, Metric == 'wer') %>%
ggplot(aes(Total, Value, group = Size, color = Size)) +
geom_point(aes(color = Size), alpha=1) +
#  geom_line(aes(linetype=Size)) +
scale_color_manual(values = c("darkblue", "peru")) +
# scale_color_brewer(palette = "Accent") +
#  scale_color_manual(values = wes_palette('Darjeeling2', n = 6)) +
#  scale_x_continuous(breaks=seq(0.5,5,1)) +
labs(x = "Training data duration (in minutes)") +
labs(y = 'WER') +
# geom_smooth(mapping = aes(Total, Std), method = 'gam') +
facet_wrap(~ Size, ncol = 1) +
theme_classic() +
theme(legend.asrition="top")  +
theme(text = element_text(size=20, family="Times")) +
ylim(0, 1) +
scale_x_continuous(breaks = seq(30, 350, by = 20))
subset(asr_al, Metric == 'wer') %>%
ggplot(aes(Total, Std, group = Size, color = Size)) +
geom_point(aes(color = Size), alpha=1) +
#  geom_line(aes(linetype=Size)) +
scale_color_manual(values = c("darkblue", "peru")) +
# scale_color_brewer(palette = "Accent") +
#  scale_color_manual(values = wes_palette('Darjeeling2', n = 6)) +
#  scale_x_continuous(breaks=seq(0.5,5,1)) +
labs(x = "Training data duration (in minutes)") +
labs(y = 'WER') +
# geom_smooth(mapping = aes(Total, Std), method = 'gam') +
facet_wrap(~ Size, ncol = 1) +
theme_classic() +
theme(legend.asrition="top")  +
theme(text = element_text(size=20, family="Times")) +
ylim(0, 0.15) +
scale_x_continuous(breaks = seq(30, 350, by = 20))
wer_30_nonlinear_predictions %>%
#  filter(valence=="negative", level=="sentence") %>%
ggplot(aes(Total.x, Total.predicted, color=Size)) +
geom_errorbar(aes(color=Size, ymin=Total.conf.low, ymax = Total.conf.high)) +
geom_label_repel(aes(label=Size), data=filter(asr_30_nonlinear_predictions, Total.x == 340 & Size == 30)) +
#  geom_ribbon(aes(ymin = Total.conf.low, ymax = Total.conf.high, fill = Size), alpha=0.3, linetype=0) +
xlab("Training data duration (in minutes)") + ylab("WER")+
theme_linedraw() + theme(legend.position="none") +
scale_x_continuous(breaks = seq(30, 350, by = 20))
wer_30_nonlinear_predictions <- as.data.frame(ggpredict(wer_30_nonlinear))
wer_30_nonlinear_predictions$Metric <- "wer"
wer_30_nonlinear_predictions$Size <- "30"
saveRDS(wer_30_nonlinear_predictions, "wer_30_nonlinear_predictions")
wer_30_nonlinear_predictions %>%
#  filter(valence=="negative", level=="sentence") %>%
ggplot(aes(Total.x, Total.predicted, color=Size)) +
geom_errorbar(aes(color=Size, ymin=Total.conf.low, ymax = Total.conf.high)) +
geom_label_repel(aes(label=Size), data=filter(asr_30_nonlinear_predictions, Total.x == 340 & Size == 30)) +
#  geom_ribbon(aes(ymin = Total.conf.low, ymax = Total.conf.high, fill = Size), alpha=0.3, linetype=0) +
xlab("Training data duration (in minutes)") + ylab("WER")+
theme_linedraw() + theme(legend.position="none") +
scale_x_continuous(breaks = seq(30, 350, by = 20))
wer_30_nonlinear_predictions
wer_30_nonlinear_predictions %>%
#  filter(valence=="negative", level=="sentence") %>%
ggplot(aes(Total.x, Total.predicted, color=Size)) +
geom_errorbar(aes(color=Size, ymin=Total.conf.low, ymax = Total.conf.high)) +
geom_label_repel(aes(label=Size), data=filter(wer_30_nonlinear_predictions, Total.x == 340 & Size == 30)) +
#  geom_ribbon(aes(ymin = Total.conf.low, ymax = Total.conf.high, fill = Size), alpha=0.3, linetype=0) +
xlab("Training data duration (in minutes)") + ylab("WER")+
theme_linedraw() + theme(legend.position="none") +
scale_x_continuous(breaks = seq(30, 350, by = 20))
wer_nonlinear_predictions %>%
#  filter(valence=="negative", level=="sentence") %>%
ggplot(aes(Total.x, Total.predicted, color=Size)) +
geom_errorbar(aes(color=Size, ymin=Total.conf.low, ymax = Total.conf.high)) +
#  geom_line(aes(color=Size,linetype=Size)) +
geom_label_repel(aes(label=Size), data=filter(wer_nonlinear_predictions, Total.x == 340)) +
#  geom_ribbon(aes(ymin = Total.conf.low, ymax = Total.conf.high, fill = Size), alpha=0.3, linetype=0) +
xlab("Training data duration (in minutes)") + ylab("WER")+
theme_linedraw() + theme(legend.position="none") #+
#  facet_wrap(~ Size, ncol = 1)
wer_nonlinear_predictions %>%
#  filter(valence=="negative", level=="sentence") %>%
ggplot(aes(Total.x, Total.predicted, color=Size)) +
geom_errorbar(aes(color=Size, ymin=Total.conf.low, ymax = Total.conf.high)) +
#  geom_line(aes(color=Size,linetype=Size)) +
geom_label_repel(aes(label=Size), data=filter(wer_nonlinear_predictions, Total.x == 340)) +
#  geom_ribbon(aes(ymin = Total.conf.low, ymax = Total.conf.high, fill = Size), alpha=0.3, linetype=0) +
xlab("Training data duration (in minutes)") + ylab("WER")+
theme_linedraw() + theme(legend.position="none") #+
facet_wrap(~ Size, ncol = 1)
wer_nonlinear_predictions %>%
#  filter(valence=="negative", level=="sentence") %>%
ggplot(aes(Total.x, Total.predicted, color=Size)) +
geom_errorbar(aes(color=Size, ymin=Total.conf.low, ymax = Total.conf.high)) +
#  geom_line(aes(color=Size,linetype=Size)) +
geom_label_repel(aes(label=Size), data=filter(wer_nonlinear_predictions, Total.x == 340)) +
#  geom_ribbon(aes(ymin = Total.conf.low, ymax = Total.conf.high, fill = Size), alpha=0.3, linetype=0) +
xlab("Training data duration (in minutes)") + ylab("WER")+
theme_linedraw() + theme(legend.position="none") +
facet_wrap(~ Size, ncol = 1)
wer_nonlinear_predictions %>%
#  filter(valence=="negative", level=="sentence") %>%
ggplot(aes(Total.x, Total.predicted, color=Size)) +
geom_errorbar(aes(color=Size, ymin=Total.conf.low, ymax = Total.conf.high)) +
#  geom_line(aes(color=Size,linetype=Size)) +
geom_label_repel(aes(label=Size), data=filter(wer_nonlinear_predictions, Total.x == 340)) +
#  geom_ribbon(aes(ymin = Total.conf.low, ymax = Total.conf.high, fill = Size), alpha=0.3, linetype=0) +
xlab("Training data duration (in minutes)") + ylab("WER")+
theme_linedraw() + theme(legend.position="none") +
facet_wrap(~ Size, ncol = 1)
head(wer_30_nonlinear_predictions)
subset(wer_30_nonlinear_predictions, Total.x=340)
subset(wer_30_nonlinear_predictions, Total.x==340)
subset(wer_30_nonlinear_predictions, Total.x==260)
subset(wer_30_nonlinear_predictions, Total.x==270)
subset(wer_60_nonlinear_predictions, Total.x==340)
subset(wer_60_nonlinear_predictions, Total.x==260)
subset(wer_60_nonlinear_predictions, Total.x==250)
subset(wer_60_nonlinear_predictions, Total.x==270)
